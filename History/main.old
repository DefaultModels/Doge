import keep_alive
import discord
from discord.ext import commands
import json
import random
from discord import Activity, ActivityType
import asyncio


client = commands.Bot(command_prefix = "+")

client.remove_command('help')


@client.event
async def on_ready():
    print('------------------')
    print(f"USERNAME: {client.user.name}")
    print(f"ID: {client.user.id}")
    print('LOGIN STATUS: Successful')
    print('------------------')
    print('> HTTP Requests And Errors:')
    await client.wait_until_ready()
    await client.change_presence(activity=Activity(name=f"+help in {len(client.guilds)} servers", 
                                                type=ActivityType.watching))


def is_any_user(ids):
    async def predicate(ctx):
        return ctx.author.id in ids
    return commands.check(predicate)

LIST_OF_PREMIUMS = [461301910289383436]

############################## CURRENCY COMMANDS ##############################


# SEARCH COMMAND
@client.command()
@commands.cooldown(1, 45, commands.BucketType.user)
async def search(ctx):
    await open_account(ctx.author)

    users = await get_bank_data()
    
    user = ctx.author
    
    jackpot = 1000

    earnings = random.randint(50, 120)
    
    action = "a dumpster","your closet","your bed","your car","the street","the pantry"
    deathreason = "You searched a dumpster and a homeless man gave you a expired sandwich which killed you!","You got run over by a car while searching the street!","You fell off a cliff while searching! Pay more attention next time!"

    deathrate = "die","die","live","live","live","live","live","live","live","live","live","live","live","live","live","live","live","live","live","live","live","live","live","live","live","live","live","live","live","live","die","live","live","live","live","live","live","live","live","live","live","die"
    
    
    fate = random.choice(deathrate)
    moneyloss = users[str(user.id)]["wallet"]/2

    if fate == "die":
      await ctx.send(f"{random.choice(deathreason)}")

      users[str(user.id)]["wallet"] -= moneyloss
    
    elif fate == "jackpot":
      await ctx.send(f"You searched {random.choice(action)} and found a golden ingot that you sold for 1000 coins!")

      users[str(user.id)]["wallet"] += jackpot

    elif fate == "live":
      await ctx.send(f"You searched {random.choice(action)} and earned {earnings} coins!")

      users[str(user.id)]["wallet"] += earnings
    
    with open("mainbank.json","w") as f:
      json.dump(users,f)

    @search.error
    async def search_cooldown(ctx, error):
      if isinstance(error, commands.CommandOnCooldown):
        await ctx.send("Your still looking for a place to search! The default cooldown for this command is `45s`.")

    

# BALANCE COMMAND
@client.command(aliases = ["bal"])
async def balance(ctx):
    await open_account(ctx.author)
    user = ctx.author
    users = await get_bank_data()

    wallet_amt = users[str(user.id)]["wallet"]
    #bank_amt = users[str(user.id)]["bank"]

    em = discord.Embed(title = f"{ctx.author.name}'s balance",color = (0x95a5a6), description = f"{wallet_amt} dogecoins")
    #em.add_field(name = "Bank balance",value = bank_amt)
    await ctx.send(embed = em)



# BEG COMMAND
@client.command()
@commands.cooldown(1, 45, commands.BucketType.user)
async def beg(ctx):
    await open_account(ctx.author)

    users = await get_bank_data()
    
    user = ctx.author
    
    earnings = random.randrange(101)

    await ctx.send(f"Someone gave you {earnings} coins!")

    users[str(user.id)]["wallet"] += earnings

    with open("mainbank.json","w") as f:
      json.dump(users,f)
    
    @beg.error
    async def beg_cooldown(ctx, error):
      if isinstance(error, commands.CommandOnCooldown):
        await ctx.send("Whoa there buddy, you gotta wait before asking someone more money. The default cooldown for this coomand is `45s`.")



# COOK COMMAND
@client.command()
@commands.cooldown(1, 60, commands.BucketType.user)
async def cook(ctx):
    await open_account(ctx.author)

    users = await get_bank_data()
    
    user = ctx.author
    
    earnings = random.randint(50, 120)
    food = random.randint(5, 12)

    await ctx.send(f"Smells good! You cooked {food} cookies :cookie: and sold them for {earnings} coins!")
 
    users[str(user.id)]["wallet"] += earnings

    with open("mainbank.json","w") as f:
      json.dump(users,f)
    
    @cook.error
    async def cook_cooldown(ctx, error):
      if isinstance(error, commands.CommandOnCooldown):
        await ctx.send("You need to wait for the oven to reheat. The default cooldown for this coomand is `1min`.")



# FARM COMMAND
@client.command()
@commands.cooldown(1, 45, commands.BucketType.user)
async def farm(ctx):
    await open_account(ctx.author)

    users = await get_bank_data()
    
    user = ctx.author
    
    earnings = random.randint(50, 120)

    await ctx.send(f"You stole the eggs from the chickens! You sold the eggs for {earnings} coins!")

    users[str(user.id)]["wallet"] += earnings

    with open("mainbank.json","w") as f:
      json.dump(users,f)
    
    @farm.error
    async def farm_cooldown(ctx, error):
      if isinstance(error, commands.CommandOnCooldown):
        await ctx.send("The farm is curently closed. The default cooldown for this coomand is `45s`.")



# WORK COMMAND
@client.command(aliases = ["job"])
@commands.cooldown(1, 3600, commands.BucketType.user)
async def work(ctx):
    await open_account(ctx.author)

    users = await get_bank_data()
    
    user = ctx.author
    
    earnings = random.randint(1000, 1500)

    randomjob = "McDonalds Cashier","UPS Driver","Teacher","Secretary","Doge developer"


    await ctx.send(f"You worked as a {random.choice(randomjob)} for one hour and earned {earnings} coins!")

    users[str(user.id)]["wallet"] += earnings

    with open("mainbank.json","w") as f:
      json.dump(users,f)
    
    @work.error
    async def work_cooldown(ctx, error):
      if isinstance(error, commands.CommandOnCooldown):
        await ctx.send("Stop trying to be the employee of the month! The default cooldown for this command is `1h`.")




# POSTMEMES COMMAND
@client.command(aliases = ["pm"])
@commands.cooldown(1, 35, commands.BucketType.user)
async def postmemes(ctx):
    await open_account(ctx.author)

    users = await get_bank_data()
    
    user = ctx.author
    
    earnings = random.randint(0, 200)


    await ctx.send(f"You posted a meme and earned {earnings} coins from the ads")

    users[str(user.id)]["wallet"] += earnings

    with open("mainbank.json","w") as f:
      json.dump(users,f)  
    
    @postmemes.error
    async def work_cooldown(ctx, error):
      if isinstance(error, commands.CommandOnCooldown):
        await ctx.send("You're being rate limited by Reddit! The default cooldown for this command is `35s`.")

# SLOTS COMMAND
@client.command(aliases = ["gamble"])
async def slots(ctx,amount = None):
  await open_account(ctx.author)
    
  users = await get_bank_data()
    
  user = ctx.author
  


  jackpot = 1000
    
  markings = ":gem: | :gem: | :gem:",":gem: | :coin: | :gift:",":gift: | :moneybag: | :gem:",":moneybag: | :gem: | :coin:",":gem: | :moneybag: | :gem:",":coin: | :gift: | :gem:",":coin: | :moneybag: | :coin:",":gem: | :gem: | :gift:"


  selection = random.choice(markings)
  moneyloss = 75


  if selection == ":gem: | :gem: | :gem:":
      em = discord.Embed(title = f"**{ctx.author.name}' slots:**",color = (0x2ecc71),description = f"{selection} \n \n :postal_horn: You won 1000 coins! :postal_horn:")
      await ctx.send(embed = em)

      users[str(user.id)]["wallet"] += jackpot

  elif selection  != ":gem: | :gem: | :gem:":
      em = discord.Embed(title = f"**{ctx.author.name}' slots:**",color = (0xe74c3c),description = f"{selection} \n \n :wastebasket: You lost your bet of 75 coins. :wastebasket:")
      await ctx.send(embed = em)    

      users[str(user.id)]["wallet"] -= moneyloss
    
  with open("mainbank.json","w") as f:
    json.dump(users,f)


################################ FUN COMMANDS ###############################


# ROAST COMMAND
@client.command(aliases = ["insult"])
async def roast(ctx):

    roast = "Y'know, I don't want another person being blinded by looking in the mirror.","Saw your mom confirm fake news, then i took my schrizophenia pills.","I only friend request ugly people. (Incoming Friend Request)","If you think im stupid, please look in the mirror.","Youre as useless as the -ueue- in queue.","If i had a face like yours, i would sue my parents.","I'd slap you, but that'll be animal abuse.","How many wrinkles does an asshole have? Smile, ill count them.","You're like the top piece of bread, everyone touches you but nobody wants you.","If you were a cookie, you'd be a whoreo.","The trash gets picked up tommorow, be ready.","Hey, train wreck. This isn't your station.","I'd unplug your life support to charge my phone.","You look like something i drew with my left hand.","You're so shitty that the toilet is jealous.","If zombies chase us, im tripping you.","You don't have to tell us you're a vegan, we can all tell","I'd love to stay and chat but I'd rather have type-2 diabetes","I would challenge you to a battle of wits, but it seems you come unarmed","Bards will chant parables of your legendary stupidity for centuries","You know, one of the many, many things that confuses me about you is that you remain unmurdered","My phone battery lasts longer than your relationships","It’s a shame you can’t Photoshop your personality","My middle finger gets a boner every time I see you","If I had a face like yours I’d sue my parents","I’d smack you, but that would be animal abuse","You’re so fat you could sell shade","You are proof that evolution can go in reverse","Learn from your parent's mistake... Use birth control","The smartest thing that ever came out of your mouth was a P_nis","Man you have more faces than Mt. Rushmore","You're entitled to your incorrect opinion!","Whoever told you to be yourself gave you really bad advice","I didn't change, I grew up you should try it sometime.","You sound reasonable, time to up my medication.","90% of your -beauty- can be removed with Kleenex","My hair straightener is hotter than you","I'd smack you, but that'd be animal abuse.","Hey I found your nose, it's on my business again.","Everyone brings happiness to a room, you just do it when you leave.","I'd like to explain it to you, but I left my English-To-Dumbass Dictionary at home.","If laughter is the best medicine, your face must be curing the world.","You're so ugly you scare the crap out of the toilet","The only way you'll ever get laid is by crawling up a chickens ass and waiting.","You're so fake Barbie is jealous.","If I wanted to kill myself, I'd climb your ego and jump to your IQ","Roses are red, violets are blue(or violet), God made me pretty, What happened to you?","Some babies are dropped on their heads, but you were clearly thrown at a wall!","Stop tryna be a smartass, you're clearly not smart.","Have you been shopping lately? They sell lives, you should go get one!","Oh a thought crossed your mind? Must've been a long and lonely journey..."


    await ctx.send(f"{random.choice(roast)}")



# PP COMMAND
@client.command()
async def pp(ctx):

    size = "=","==","===","====","=====","======","=======","========"


    await ctx.send(f"**{ctx.author.name}'s PP:** 8{random.choice(size)}D")




# 8BALL COMMAND
@client.command(aliases = ["8ball"])
async def ball(ctx):

    response = "Yes","No","Probably","Very doubtful"

    await ctx.send(f"**:8ball: Answer:** {random.choice(response)}")

# PING COMMAND
@client.command()
async def ping(ctx):
  await ctx.send('Pong! {0} seconds.'.format(client.latency))



################################ HELP COMMANDS ###############################


# HELP COMMAND
@client.command(aliases = ["commands","cmds"])
async def help(ctx):
    await open_account(ctx.author)

    em = discord.Embed(title = f"Help",color = (0x95a5a6))
    em.add_field(name = ":moneybag: Currency",value = "`cook` - Cook some cookies and sell them \n `beg` - Beg and get coins \n `farm` - Farm and sell the production for coins \n `daily` - Get 2500 coins every day \n `balance` - Shows you the amount of money you have \n `work` - Work and earn coins \n `postmemes` - Post memes on reddit to get ad money \n `search` - Look for some coins \n `slots` - Gamble to win coins", inline=False)
    em.add_field(name = ":zany_face: Fun",value = "`roast` - Bot responds with a roast \n `pp` - Get your pp size \n `8ball` - Get an answer from the 8ball", inline=False)
    em.add_field(name = ":coin: Premium",value = "`weekly` - Get coins every week", inline=False)
    em.add_field(name=":link: Quick Links",value="[Vote For Me](https://top.gg/bot/785160383560286240/vote) - [Invite Me](https://discord.com/oauth2/authorize?client_id=785160383560286240&scope=bot&permissions=2147483647) - [Support Server](https://discord.gg/3d6BpRHvbR) - [Premium/Donate](https://donatebot.io/checkout/794412631543906365)", inline=False)
    await ctx.send(embed = em)



###############################################################################

async def open_account(user):
  
  users = await get_bank_data()

  if str(user.id) in users:
    return False
  else:
    users[str(user.id)] = {}
    users[str(user.id)]["wallet"] = 250
    users[str(user.id)]["bank"] = 0


  with open("mainbank.json","w") as f:
    json.dump(users,f)
  return True

async def get_bank_data():
    with open("mainbank.json","r") as f:
      users = json.load(f)

    return users


async def update_bank(user,change = 0,mode = "wallet"):
  users = await get_bank_data()
  
  users[str(user.id)][mode] += change

  with open("mainbank.json","w") as f:
    json.dump(users,f)
  return True

keep_alive.keep_alive()
client.run('Nzg1MTYwMzgzNTYwMjg2MjQw.X8zzlw.1hFbOSTspGSltPRdhIQOHq8lcKw')
